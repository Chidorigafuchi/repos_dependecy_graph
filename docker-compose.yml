name: repos_dependency_graph

services:
  backend:
    build: ./backend
    container_name: django_backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    restart: unless-stopped 
    depends_on:
      - redis
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    
  frontend:
    build: ./frontend
    container_name: vue_frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
    restart: unless-stopped
    command: npm run dev -- --host

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  celery:
    build: ./backend
    container_name: celery_worker
    command: celery -A repos_dependency_graph worker --loglevel=info --max-tasks-per-child=1
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    depends_on:
      - redis
      - backend
    restart: unless-stopped

  celery_beat:
    build: ./backend
    container_name: celery_beat
    working_dir: /app
    command: celery -A repos_dependency_graph beat --loglevel=info
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    depends_on:
      - redis
      - backend
    restart: unless-stopped